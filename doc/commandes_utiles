## Créer un bac à sable

rails new bac-a-sable -T --database=postgresql
Dans config/database.yml ajouter :
```
  username: mon_username
  password: mon_password
  host:localhost
```

rails db:create
rails s

## Utiliser l'ordonnanceur de scaligo et heroku

RAILS_ENV=development PORT=3000  foreman start web

## Déployer en production

git push git@ssh.osc-fr1.scalingo.com:clause-sociale-de-formation.git master

## Intégrer les données en production

- pg_dump csf_development --format=c -U csf -W -h localhost > pg_backup.bak

Note du support de Scalingo :

> En effet, vous n'avez pas les droit d'ajouter, enlever et/ou ajouter des extensions pour des raisons de sécurité. Pour cela, vous devez le faire depuis le dashboard.
> La solution ici est de :
> 
> - Soit ignorer cette erreur et continuer le dump des données
> - Soit changer le dump pour supprimer ces lignes
>

- dans un terminal, configurer un tunnel comme suit :
  export $(scalingo --app clause-sociale-de-formation --region osc-fr1 env | grep "^SCALINGO_POSTGRESQL")
  scalingo -a clause-sociale-de-formation --region osc-fr1 db-tunnel $SCALINGO_POSTGRESQL_URL

- dans un autre terminal, export une variable `DATABASE_URL` contenant une chaine de connexion passant par le tunnel : `export DATABASE_URL=postgresql://<login>:<mot_de_pass>@127.0.0.1:10000/<db_name>

- puis, executer la commande de restore : `pg_restore -e --clean --if-exists --format=c --no-owner --no-privileges --dbname $DATABASE_URL pg_backup.bak`

## Envoyer un email avec tout plein de chose déjà rempli

Pour l'envoie de mail on pourrait utiliser un mailto tout simple

<a href="mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&bcc=name3@rapidtables.com&subject=The%20subject%20of%20the%20email&body=The%20body%20of%20the%20email">
    Send mail with cc, bcc, subject and body
</a>

## Activer l'auto-deploy

- En étant connecté sous l'utilisateur github, vérifier que l'accès est bien donné pour le groupe qui va servir au lien :

https://github.com/settings/connections/applications/dce5163f63352f1a4d45

- Ensuite, sous scalingo, allez dans **code**
